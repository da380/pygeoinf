{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0d42e49d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Uncomment and run this when using colab. \n",
    "#%pip install pygeoinf"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86fb2eb9",
   "metadata": {},
   "source": [
    "# Tutorial 5 - Gaussian measures\n",
    "\n",
    "A Gaussian measure on a Hilbert space, $X$, generalises the familar Gaussian distribution on finite-dimensionsl Euclidean spaces. Such a measure, $\\mu$, is characterised by its **expectation**, this being an element of $X$, and its **covariance** which is a self-adjoint and trace-class linear operator on $X$. We use the notation $\\mathcal{N}_{X}(\\overline{u}, Q)$ to denote a Gaussian measure on $X$ with expectation $\\overline{u} \\in X$ and covariance $Q \\in \\mathrm{Hom}(X)$. If an $X$-valued random variable has probability law $\\mu$ then we write $u \\sim \\mu$. Note that within this discussion the terms \"probability measure\" and \"probability distribition\" are used interchangably, with the prefix \"probability\" typically being dropped. \n",
    "\n",
    "Within ```pygeoinf``` Gaussian measures are implemented withint the ```GaussianMeasure``` class. This class stores the measure's expectation and covariance while also providing a range of useful methods.\n",
    "\n",
    "### Constructing a Gaussian measure\n",
    "\n",
    "A instance of ```GaussianMeasure``` can be constructed by provide either of the following keyword arguments: \n",
    "\n",
    "- ```covariance```: The covariance, $Q$, as an instance of ```LinearOperator```. \n",
    "- ```covariance_factor```:  A Cholesky factor, $L$, for the covariance such that $Q = LL^{*}$. The factor $L$ is given as a ```LinearOperator``` from a Euclidean space into the domain of the measure. \n",
    "\n",
    "A range of other keyword arguments can be provided:\n",
    "\n",
    "- ```expectation```: The expected value for the measure. The default is ```None``` in which case the measure has zero expectation. \n",
    "- ```sample```: A callable object that takes no arguments and returns sample from the measure. The default is ```None```. \n",
    "- ```inverse_covariance```: The inverse of the covariance as a ```LinearOperator```. The default is ```None```.\n",
    "- ```inverse_covariance_factor```: The inverse of the covariance factor. The default is ```None```. \n",
    "\n",
    "If the covariance factor, $L \\in \\mathrm{Hom}(\\mathbb{R}^{n},X)$, samples from the measure can be efficiently generated in the form\n",
    "$$\n",
    "u = \\overline{u} + L w, \n",
    "$$\n",
    "where $w \\sim \\mathcal{N}_{\\mathbb{R}^{n}}(0, \\mathrm{Id}_{\\mathbb{R}^{n}})$. This approach takes precedence over any user provided sampling method. \n",
    "\n",
    "As a first example, we construct a ```GaussianMeasure``` defined on ```EuclideanSpace``` by setting its covariance and expectation. Because no ```sample``` method has been provided, it is not possible to generate samples from the measure. Note that in constructing the covariance we first set it as a numpy matrix and then form a ```LinearOperator``` using the static method ```self_adjoint_from_matrix```. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "45a8a791",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pygeoinf as inf\n",
    "\n",
    "# Set the space. \n",
    "X = inf.EuclideanSpace(5)\n",
    "\n",
    "# Set the expectation\n",
    "expectation = np.random.randn(X.dim)\n",
    "\n",
    "# Generate a covariance matrix\n",
    "matrix = np.random.randn(X.dim, X.dim)\n",
    "covariance_matrix = matrix @ matrix.T\n",
    "covariance = inf.LinearOperator.self_adjoint_from_matrix(X, covariance_matrix)\n",
    "\n",
    "# Set the GaussianMeasure\n",
    "mu = inf.GaussianMeasure(covariance=covariance, expectation=expectation)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0990e62d",
   "metadata": {},
   "source": [
    "Such a ```GaussianMeasure``` has relatively little functionality. But its basic data can be accessed:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c77f2167",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mu.domain == X is: True\n",
      "Expectation of the measure: [-0.94330663  0.05081911 -2.67958871 -0.08073235  1.96824748]\n",
      "Covariance of the measure:\n",
      " [[ 1.73993344  0.97056774  0.4636536  -0.53434703  2.59395452]\n",
      " [ 0.97056774  0.83588801  0.68948348 -0.65923083  2.28856094]\n",
      " [ 0.4636536   0.68948348  2.70117446 -1.42516354  3.38274323]\n",
      " [-0.53434703 -0.65923083 -1.42516354  5.26515526 -1.25303019]\n",
      " [ 2.59395452  2.28856094  3.38274323 -1.25303019  7.70029821]]\n"
     ]
    }
   ],
   "source": [
    "print(f'mu.domain == X is: {mu.domain == X}')\n",
    "print(f'Expectation of the measure: {mu.expectation}')\n",
    "print(f'Covariance of the measure:\\n {mu.covariance}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e478229",
   "metadata": {},
   "source": [
    "Let's redefine this measure using the same expectation and covariance, but now providing a sampling method via ```scipy.stats```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6af12448",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import  multivariate_normal\n",
    "\n",
    "# Set up the scipy multivariate normal. \n",
    "distribution = multivariate_normal(mean = expectation, cov = covariance_matrix)\n",
    "\n",
    "# Now set the Gassian measure including a sampling method. \n",
    "mu = (inf.GaussianMeasure(\n",
    "        covariance=covariance,\n",
    "        expectation=expectation,\n",
    "        sample=lambda : distribution.rvs())\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79e2eccf",
   "metadata": {},
   "source": [
    "Using this new measure, we can generate random samples using ```sample``` for a single sample or ```samples``` for multiple samples returned as a list:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8d73e80f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A sample from the measure:\n",
      " [-1.52913555 -0.41048792 -5.50258371  0.33495698 -1.34430733]\n",
      "A set of samples from the measure:\n",
      "[-1.69694065 -1.0204706  -3.56671609 -2.43001926 -1.81154375]\n",
      "[-1.07270651 -0.54681179 -4.65792675  1.05781376 -0.7118105 ]\n",
      "[-0.27757695  0.08394607 -3.16731927 -0.90195045  1.4145824 ]\n",
      "[ 0.12777953  0.82294009 -3.74358014 -6.5062818   0.96377285]\n",
      "[-2.6355292  -0.8844544  -5.10379474  1.91000298 -1.89878877]\n",
      "[-1.35990634  0.11261467 -0.39067831 -1.87032403  3.59826831]\n",
      "[-1.06757771 -1.14578799 -3.9010909   0.75109631 -1.44741867]\n",
      "[ 0.56718108  1.5763579  -1.6235408  -1.30352195  6.12582934]\n",
      "[-1.20484759  0.3649584  -3.77300001 -3.3339379   0.68562768]\n",
      "[-0.4645154   0.16675687 -4.52564831  5.58434611  2.30949049]\n"
     ]
    }
   ],
   "source": [
    "# Print a single sample. \n",
    "print(f'A sample from the measure:\\n {mu.sample()}')\n",
    "\n",
    "# Get a list of ten samples and print them\n",
    "print(f'A set of samples from the measure:')\n",
    "samples = mu.samples(10)\n",
    "for i, sample in enumerate(samples):\n",
    "    print(f'{sample}')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1331f4cd",
   "metadata": {},
   "source": [
    "A static method, ```from_covariance_matrix``` is provided that can simplify the construction of simple Gaussian measures. Internally, the eigen-decomposition of the covariance matrix is formed and used to factor both the covariance and inverse covariance. Note that the matrix input is the Galerkin representation of the covariance. Because this method is based on the storage and factorisation of dense matrices it is inefficient in high-dimensional spaces. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "34760947",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Expectation of the measure: [-0.94330663  0.05081911 -2.67958871 -0.08073235  1.96824748]\n",
      "Covariance of the measure:\n",
      " [[ 1.73993344  0.97056774  0.4636536  -0.53434703  2.59395452]\n",
      " [ 0.97056774  0.83588801  0.68948348 -0.65923083  2.28856094]\n",
      " [ 0.4636536   0.68948348  2.70117446 -1.42516354  3.38274323]\n",
      " [-0.53434703 -0.65923083 -1.42516354  5.26515526 -1.25303019]\n",
      " [ 2.59395452  2.28856094  3.38274323 -1.25303019  7.70029821]]\n",
      "sample 0 is equal to: [-4.13514317 -2.21679437 -2.1361908  -2.02023971 -3.36563017]\n",
      "sample 1 is equal to: [-3.18235565 -1.90478702 -2.28011758  3.80017219 -1.22870507]\n",
      "sample 2 is equal to: [ 0.07811378  1.09834065 -0.92499984 -2.42560181  4.79746717]\n",
      "sample 3 is equal to: [-2.66100224 -1.11297345 -4.65721645  0.60174438 -2.18710307]\n",
      "sample 4 is equal to: [-2.1334078  -0.57077526 -4.33297616 -3.64242251 -1.85329242]\n",
      "sample 5 is equal to: [-0.51057031 -0.7943052  -3.95588224  5.61049749  0.97990522]\n",
      "sample 6 is equal to: [-2.84631787 -1.60821697 -1.72796219  0.75160492 -0.97378554]\n",
      "sample 7 is equal to: [-1.53146919 -0.08822224 -4.23671746  2.36286774  1.07770728]\n",
      "sample 8 is equal to: [-0.94141792  0.89627235  0.59777703 -3.13978634  5.7294624 ]\n",
      "sample 9 is equal to: [-2.05508508 -0.29237089 -1.28460516  2.40706602  2.47469458]\n"
     ]
    }
   ],
   "source": [
    "# Form from using the static method.\n",
    "mu = inf.GaussianMeasure.from_covariance_matrix(X, covariance_matrix, expectation=expectation)\n",
    "\n",
    "print(f'Expectation of the measure: {mu.expectation}')\n",
    "print(f'Covariance of the measure:\\n {mu.covariance}')\n",
    "\n",
    "# The sampling method is now set for us. \n",
    "samples = mu.samples(10)\n",
    "for i, sample in enumerate(samples):\n",
    "    print(f'sample {i} is equal to: {sample}')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8184588d",
   "metadata": {},
   "source": [
    "### Other static methods for constructing Gaussian measures\n",
    "\n",
    "In addition to ```from_covariance_matrix``` a several other static methods are provided for constructing common Gaussian measures. In each case an efficient sampling method is provided. \n",
    "\n",
    "The method ```from_standard_deviation``` returns a Gaussian measure on $X$ whose covariance takes the form\n",
    "$$\n",
    "Q = \\sigma^{2}\\,\\mathrm{Id}_{X}, \n",
    "$$\n",
    "with $\\sigma$ the standard deviation and $\\mathrm{Id}_{X}$ the identity operator on $X$. Due to the trace-class condition, this measure is only well-defined on finite-dimensional spaces. The expectation of the measure can optionally be set, with the default being zero. \n",
    "\n",
    "A related method is ```from_standard_deviations```. In this casem it is assumed that the Galerkin representation of the covariance is diagonal and hence only its diagonal values need to be provided. Again a non-zero expectation can be optionally set. \n",
    "\n",
    "A final method to mention for the timebeing is ```from_samples```. In this case, the user provides the domain for the measure along with a collection of its elements, $\\{x_{i}\\}_{i=1}^{n}$ with $n >1$. A measure is then constructed whose expectation is equal to the **sample expectation**\n",
    "$$\n",
    "\\overline{x} = \\frac{1}{n}\\sum_{i=1}^{n}x_{i}, \n",
    "$$\n",
    "and whose covariance is is equal to the **sample covariance**\n",
    "$$\n",
    "Q = \\frac{1}{n-1}\\sum_{i=1}^{n}(x_{i}-\\overline{x})\\otimes (x_{i}-\\overline{x}), \n",
    "$$\n",
    "with $\\otimes$ denoting the tensor product. In this case, samples from the measure can be generated in the form\n",
    "$$\n",
    "x = \\overline{x} + \\frac{1}{\\sqrt{n-1}}\\sum_{i=1}^{n} w_{i} \\,(x_{i}-\\overline{x})\n",
    "$$\n",
    "where the $w_{i}\\in \\mathbb{R}$ are drawn from the standard Gaussian distribution."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93ae1773",
   "metadata": {},
   "source": [
    "### Transformations of Gaussian measures\n",
    "\n",
    "Gaussian measures can be transformed in various ways. In particular, the push-forward of a Gaussian measure under an affine mapping remains Gaussian. Let $\\mu = \\mathcal{N}_{X}(\\overline{u},Q)$ and consider the affine mapping\n",
    "$$\n",
    "f(v) = v_{0} + A u,\n",
    "$$\n",
    "for $A \\in \\mathrm{Hom}(X,Y)$. It can then be shown that \n",
    "$$\n",
    "f_{*}\\mu = \\mathcal{N}_{Y}(v_{0} + A \\overline{u}, AQA^{*}).\n",
    "$$\n",
    "This idea is implemented in ```GaussianMeasure``` through the ```affine_mapping``` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "601734ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Expectation of the measure: [-0.91486181  0.97891676 -1.64289078]\n",
      "Covariance of the measure:\n",
      " [[1.73993344 0.97056774 0.4636536 ]\n",
      " [0.97056774 0.83588801 0.68948348]\n",
      " [0.4636536  0.68948348 2.70117446]]\n",
      "sample 0 is equal to: [ 1.15436968  1.95973986 -0.35029542]\n",
      "sample 1 is equal to: [-1.41817964 -0.55801486 -6.62803712]\n",
      "sample 2 is equal to: [-1.7629631   0.76975871 -1.98380398]\n",
      "sample 3 is equal to: [-2.31701022  0.25554326 -2.54034617]\n",
      "sample 4 is equal to: [-1.69453777  0.96181151  0.23153631]\n",
      "sample 5 is equal to: [-0.93228256  0.84364881 -3.50264389]\n",
      "sample 6 is equal to: [-0.90590507  1.33073674 -1.86469471]\n",
      "sample 7 is equal to: [-2.07882935  0.37133463 -4.00408062]\n",
      "sample 8 is equal to: [-2.28382008  1.23333455  1.67566827]\n",
      "sample 9 is equal to: [2.16438412 3.09114717 0.21083988]\n",
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "# Set the codomain of the transformation\n",
    "Y = inf.EuclideanSpace(3)\n",
    "\n",
    "# Set the translation\n",
    "y0 = Y.random()\n",
    "\n",
    "# Set the operator to be the projection from X to Y.\n",
    "A = inf.LinearOperator(X, Y, lambda x : x[:Y.dim])\n",
    "\n",
    "# Push forward the measure mu. \n",
    "nu = mu.affine_mapping(translation=y0, operator=A)\n",
    "\n",
    "\n",
    "# Print the mean and covariance.\n",
    "print(f'Expectation of the measure: {nu.expectation}')\n",
    "print(f'Covariance of the measure:\\n {nu.covariance}')\n",
    "\n",
    "# The new measure has a sampling method so long as the original does:\n",
    "samples = nu.samples(10)\n",
    "for i, sample in enumerate(samples):\n",
    "    print(f'sample {i} is equal to: {sample}')\n",
    "\n",
    "\n",
    "# If the original measure is in factored form, so is the new one. \n",
    "print(nu.covariance_factor_set)\n",
    "\n",
    "# But the inverse of the covariance is not set. \n",
    "print(nu.inverse_covariance_set)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96acfd21",
   "metadata": {},
   "source": [
    "As special cases of the affine transformation, other algebraic operations with measures can be performed. For example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a30bca6b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Expectation of the measure: [-1.88661326  0.10163823 -5.35917741 -0.16146471  3.93649496]\n",
      "Covariance of the measure:\n",
      " [[ 6.95973376  3.88227097  1.85461439 -2.13738814 10.3758181 ]\n",
      " [ 3.88227097  3.34355206  2.7579339  -2.63692334  9.15424377]\n",
      " [ 1.85461439  2.7579339  10.80469783 -5.70065415 13.53097294]\n",
      " [-2.13738814 -2.63692334 -5.70065415 21.06062106 -5.01212075]\n",
      " [10.3758181   9.15424377 13.53097294 -5.01212075 30.80119283]]\n",
      "Expectation of the measure: [-1.88661326  0.10163823 -5.35917741 -0.16146471  3.93649496]\n",
      "Covariance of the measure:\n",
      " [[ 6.95973376  3.88227097  1.85461439 -2.13738814 10.3758181 ]\n",
      " [ 3.88227097  3.34355206  2.7579339  -2.63692334  9.15424377]\n",
      " [ 1.85461439  2.7579339  10.80469783 -5.70065415 13.53097294]\n",
      " [-2.13738814 -2.63692334 -5.70065415 21.06062106 -5.01212075]\n",
      " [10.3758181   9.15424377 13.53097294 -5.01212075 30.80119283]]\n"
     ]
    }
   ],
   "source": [
    "pi = 2 * mu\n",
    "print(f'Expectation of the measure: {pi.expectation}')\n",
    "print(f'Covariance of the measure:\\n {pi.covariance}')\n",
    "\n",
    "xi = mu + pi\n",
    "print(f'Expectation of the measure: {pi.expectation}')\n",
    "print(f'Covariance of the measure:\\n {pi.covariance}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87bcb999",
   "metadata": {},
   "source": [
    "### Gaussian measures on function spaces\n",
    "\n",
    "So far we have considered Gaussian measures defined on Euclidean spaces. But all the ideas carry over to function spaces. Looking, as usual, at the case of $H^{s}(\\mathbb{S}^{1})$ the class ```Sobolev``` in ```pygeoinf.symmetric_space.circle``` provides methods for generating a number of useful ```GaussianMeasures```. All these measures have in common invariance under the domains underlying symmetry group which, in this case, is $\\mathrm{SO}(1)$. It can be shown that the covariance for such a measure takes the form $f(\\Delta)$ with $f$ a function that decreases sufficient fast and $\\Delta$ the Laplacian. A method ```invariant_gaussian_measure``` is provided that can generate such a meaure given the function, $f$. This is then used to generate measures for two conventional choices of $f$. The first is ```sobolev_gaussian_measure``` whose covariance is given by \n",
    "$$\n",
    "Q = \\alpha (1 + \\lambda^{2}\\Delta)^{-s}, \n",
    "$$\n",
    "with $\\alpha$, $\\lambda$ and $s$ being parameters.  The second is ```heat_gaussian_measure``` whose covariance is given by \n",
    "$$\n",
    "Q = \\alpha \\mathrm{e}^{-\\lambda^{2}\\Delta}, \n",
    "$$\n",
    "with $\\alpha$ and $\\lambda$ being parameters. In either case the value of $\\alpha$ is implicitly set by specifying an ```amplitude``` which is equal to the pointwise standard deviation for random fields generated from the measure. \n",
    "\n",
    "In the code below we set up ```heat_gaussian_measure`` and plot a set of samples. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "281bced1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from pygeoinf.symmetric_space.circle import Sobolev\n",
    "\n",
    "X = Sobolev.from_sobolev_parameters(2,0.01)\n",
    "\n",
    "u = X.project_function(lambda th : np.sin(th))\n",
    "\n",
    "mu = X.heat_gaussian_measure(0.05, 0.1, expectation=u)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "X.plot(mu.expectation, fig=fig, ax=ax, color = 'k')\n",
    "number_of_samples = 100\n",
    "samples = mu.samples(number_of_samples)\n",
    "for sample in samples:\n",
    "    X.plot(sample, fig=fig, ax=ax, color = 'k', alpha = 1/number_of_samples)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25921f0e",
   "metadata": {},
   "source": [
    "Just as in the finite-dimensional case, we can transform the measure under an affine mapping. Here we set up the derivative operator as in Tutorial 4 and use this to push forward our measure."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "918abaa7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Y = Sobolev.from_sobolev_parameters(1,0.01)\n",
    "\n",
    "# Define the derivative mapping\n",
    "def mapping(u):\n",
    "    coeff = X.to_coefficient(u)\n",
    "    for k in range(coeff.size):\n",
    "        coeff[k] *= 1j * k\n",
    "    return Y.from_coefficient(coeff)\n",
    "\n",
    "# Define the formal adjoint. Note that this\n",
    "# needs a separate definition because the two \n",
    "# spaces have different spatial discretisations. \n",
    "def formal_adjoint_mapping(v):\n",
    "    coeff = Y.to_coefficient(v)\n",
    "    for k in range(coeff.size):\n",
    "        coeff[k] *= -1j * k\n",
    "    return X.from_coefficient(coeff)\n",
    "\n",
    "    \n",
    "# Set up the operator. \n",
    "A = inf.LinearOperator(X, Y, mapping, formal_adjoint_mapping=formal_adjoint_mapping)\n",
    "\n",
    "nu = mu.affine_mapping(operator=A)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "Y.plot(nu.expectation, fig=fig, ax=ax, color = 'k')\n",
    "samples = nu.samples(number_of_samples)\n",
    "for sample in samples:\n",
    "    Y.plot(sample, fig=fig, ax=ax, color = 'k', alpha = 1/number_of_samples)\n",
    "\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "pygeoinf-0ZCu7S8P-py3.11",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
