"""
PyGeoInf Class Dependency Tree (Text Version) - INCLUDING INTERVAL FOLDER
=========================================================================

FUNDAMENTAL LEVEL (Core Mathematical Abstractions)
├── random_matrix.py (algorithmic functions)
└── HilbertSpace (ABC) ← Core foundation for everything

CORE LEVEL (Basic Building Blocks)
├── LinearForm ← depends on: HilbertSpace
├── Operator ← depends on: HilbertSpace
├── LinearOperator ← depends on: Operator, HilbertSpace, random_matrix
├── EuclideanSpace ← depends on: HilbertSpace
└── DiagonalLinearOperator ← depends on: LinearOperator

COMPOSITION LEVEL (Combining Basic Structures)
├── HilbertSpaceDirectSum ← depends on: HilbertSpace
├── BlockLinearOperator family ← depends on: LinearOperator, HilbertSpaceDirectSum
├── GaussianMeasure ← depends on: HilbertSpace, LinearOperator
└── LinearSolver family ← depends on: LinearOperator

PROBLEM FORMULATION LEVEL (Mathematical Problem Setup)
├── ForwardProblem ← depends on: LinearOperator, GaussianMeasure
└── Inversion (ABC) ← depends on: ForwardProblem

ALGORITHM LEVEL (Specific Solution Methods)
├── LinearBayesianInversion ← depends on: Inversion, ForwardProblem, GaussianMeasure
├── LinearLeastSquaresInversion ← depends on: Inversion, ForwardProblem, LinearSolver
└── LinearBayesianInference ← depends on: LinearBayesianInversion

GEOMETRIC SPACES (Higher-Dimensional Manifolds)
├── AbstractInvariantLebesgueSpace ← depends on: HilbertSpace, LinearOperator, GaussianMeasure
└── Circle/Sphere classes ← depends on: AbstractInvariantLebesgueSpace, HilbertModule

INTERVAL IMPLEMENTATIONS (1D Function Spaces) **NEW**
├── Core Components:
│   ├── IntervalDomain ← depends on: HilbertSpace
│   ├── Function (interval) ← depends on: IntervalDomain, L2Space
│   └── BoundaryConditions ← standalone utility class
├── Hilbert Spaces:
│   ├── L2Space ← depends on: HilbertSpace, IntervalDomain
│   └── SobolevSpace ← depends on: L2Space
├── Operators & Solvers:
│   ├── IntervalOperators (Laplacian, Gradient, etc.) ← depends on: LinearOperator, L2Space, BoundaryConditions
│   └── FEMSolvers ← depends on: IntervalOperators, BoundaryConditions, L2Space
└── Function Families:
    ├── FunctionProviders (Fourier, Splines, Bumps, etc.) ← depends on: Function
    └── BasisProviders & SpectrumProviders ← depends on: L2Space

KEY INSIGHTS:
=============
• Most fundamental: HilbertSpace (everything builds on this)
• Core workhorses: LinearOperator and GaussianMeasure (used by almost everything)
• Clean separation: Problem formulation is separate from solution algorithms
• Extensible design: Both geometric and interval spaces extend core framework
• Good dependency inversion: High-level depends on abstractions, not implementations

INTERVAL INTEGRATION WITH MAIN FRAMEWORK:
=========================================
• L2Space and SobolevSpace → integrate with ForwardProblem and GaussianMeasure
• IntervalOperators → work with main LinearOperator hierarchy
• FEM solvers → can be used in inversion algorithms
• Function providers → support GP priors and basis construction

TYPICAL USAGE FLOW (with intervals):
===================================
1. Define IntervalDomain for [a,b] with boundary conditions
2. Create L2Space or SobolevSpace on that domain
3. Build Function objects using providers (Fourier, splines, etc.)
4. Set up differential operators (Laplacian, etc.) with FEM solvers
5. Create GaussianMeasures for priors using interval covariance operators
6. Formulate ForwardProblem linking model space to data
7. Choose inversion method (Bayesian or optimization-based)
8. Solve for model parameters or posterior distributions
"""